{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/darly-solutions/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Box, CircularProgress, Container } from \"@mui/material\";\nimport { Modal } from \"./components/Modal\";\nimport { UsersData } from \"./components/UsersData/UsersData\";\nimport { ModalContext } from \"./modal-context\";\nimport { dataByPage } from \"./api/constants/const\";\nimport { BASE_URL, client } from \"./api/fetch\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [, setError] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n  const [, setModalContextValue] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isCreate, setIsCreate] = useState(false);\n  const addUser = useCallback(user => {\n    setUsers(prevUsers => [user, ...prevUsers]);\n  }, []);\n\n  const loadMoreUsers = async () => {\n    const res = await client.get(`?_page=${page + 1}&_limit=${dataByPage}`);\n    await setUsers(prevList => {\n      return [...prevList, ...res];\n    });\n\n    if (!res) {\n      setError(\"error\");\n    } else {\n      setPage(prev => prev + 1);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(`${BASE_URL}?_page=${1}&_limit=${dataByPage}`);\n\n      if (!response.ok) {}\n    };\n\n    fetchData(); // fetch(`${BASE_URL}?_page=${1}&_limit=${dataByPage}`)\n    //   .then((response) => {\n    //     if (!response.ok) {\n    //       throw new Error(`error with db ${response.statusText}`);\n    //     }\n    //     const total = Number(response.headers.get(\"X-Total-Count\"));\n    //     setHasMore(total > page * dataByPage);\n    //   })\n    //   .catch((e) => setError(e));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      pb: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n      value: {\n        create: isCreate,\n        open: isModalOpen,\n        setCreate: setIsCreate,\n        setItem: setModalContextValue,\n        setOpen: setIsModalOpen,\n        addUser: addUser\n      },\n      children: [/*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        pageStart: 1,\n        loadMore: loadMoreUsers,\n        hasMore: hasMore,\n        loader: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            margin: \"20px\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, `${page * dataByPage}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(UsersData, {\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), isModalOpen ? /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 24\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"haHBBiwMGN/D+i1WheiNLyMGbvg=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macbook/Desktop/darly-solutions/src/App.tsx"],"names":["React","useCallback","useEffect","useState","InfiniteScroll","Box","CircularProgress","Container","Modal","UsersData","ModalContext","dataByPage","BASE_URL","client","App","users","setUsers","setError","page","setPage","hasMore","setHasMore","setModalContextValue","isModalOpen","setIsModalOpen","isCreate","setIsCreate","addUser","user","prevUsers","loadMoreUsers","res","get","prevList","prev","fetchData","response","fetch","ok","pb","create","open","setCreate","setItem","setOpen","display","margin","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Box, CircularProgress, Container } from \"@mui/material\";\n\nimport { Modal } from \"./components/Modal\";\nimport { UsersData } from \"./components/UsersData/UsersData\";\nimport { ModalContext } from \"./modal-context\";\n\nimport { dataByPage } from \"./api/constants/const\";\nimport { BASE_URL, client } from \"./api/fetch\";\n\nimport { User } from \"./types/User\";\nimport \"./index.scss\";\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [, setError] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n\n  const [, setModalContextValue] = useState<User>();\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [isCreate, setIsCreate] = useState<boolean>(false);\n\n  const addUser = useCallback((user: User) => {\n    setUsers((prevUsers) => [user, ...prevUsers]);\n  }, []);\n\n  const loadMoreUsers = async () => {\n    const res = await client.get<User>(`?_page=${page + 1}&_limit=${dataByPage}`);\n\n    await setUsers((prevList) => {\n      return [...prevList, ...res];\n    });\n\n    if (!res) {\n      setError(\"error\");\n    } else {\n      setPage((prev) => prev + 1);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n        const response = await fetch(`${BASE_URL}?_page=${1}&_limit=${dataByPage}`);\n        if (!response.ok) {\n            \n        }\n    };\n    fetchData();\n    // fetch(`${BASE_URL}?_page=${1}&_limit=${dataByPage}`)\n    //   .then((response) => {\n    //     if (!response.ok) {\n    //       throw new Error(`error with db ${response.statusText}`);\n    //     }\n\n    //     const total = Number(response.headers.get(\"X-Total-Count\"));\n\n    //     setHasMore(total > page * dataByPage);\n    //   })\n    //   .catch((e) => setError(e));\n  }, []);\n\n  return (\n    <Container maxWidth=\"md\" sx={{ pb: \"20px\" }}>\n      <ModalContext.Provider\n        value={{\n          create: isCreate,\n          open: isModalOpen,\n          setCreate: setIsCreate,\n          setItem: setModalContextValue,\n          setOpen: setIsModalOpen,\n          addUser: addUser,\n        }}\n      >\n        <InfiniteScroll\n          pageStart={1}\n          loadMore={loadMoreUsers}\n          hasMore={hasMore}\n          loader={\n            <Box\n              sx={{\n                display: \"flex\",\n                margin: \"20px\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n              key={`${page * dataByPage}`}\n            >\n              <CircularProgress />\n            </Box>\n          }\n        >\n          <UsersData users={users} />\n        </InfiniteScroll>\n        {isModalOpen ? <Modal /> : null}\n      </ModalContext.Provider>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}