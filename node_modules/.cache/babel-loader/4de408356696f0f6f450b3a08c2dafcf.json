{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/darly-solutions/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Container, Paper, TableBody, TableContainer } from \"@mui/material\";\nimport { Modal } from \"./components/Modal\";\nimport { UsersData } from \"./components/UsersData/UsersData\";\nimport { ModalContext } from \"./modal-context\";\nimport { dataByPage } from \"./api/constants/const\";\nimport { BASE_URL, client } from \"./api/fetch\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [, setError] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n  const [modalContextValue, setModalContextValue] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isCreate, setIsCreate] = useState(false);\n  const addUser = useCallback(user => {\n    setUsers(prevUsers => [user, ...prevUsers]);\n  }, []);\n\n  const loadMoreUsers = async () => {\n    const res = await client.get(`?_page=${page + 1}&_limit=${dataByPage}`);\n    await setUsers(prevList => {\n      return [...prevList, ...res];\n    });\n\n    if (!res) {\n      setError(\"error\");\n    } else {\n      setPage(prev => prev + 1);\n    } //   .then((res) => {\n    //     setUsers((prevList) => [...prevList, ...res]);\n    //   })\n    //   .catch((e) => setError(e))\n    //   .finally(() => setPage((prev) => prev + 1));\n\n  };\n\n  useEffect(() => {\n    fetch(`${BASE_URL}?_page=${1}&_limit=${dataByPage}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`error with db ${response.statusText}`);\n      }\n\n      const total = Number(response.headers.get(\"X-Total-Count\"));\n      setHasMore(total > page * dataByPage);\n    }).catch(e => setError(e));\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      pb: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n      value: {\n        create: isCreate,\n        open: isModalOpen,\n        setCreate: setIsCreate,\n        setItem: setModalContextValue,\n        setOpen: setIsModalOpen,\n        addUser: addUser\n      },\n      children: [/*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        pageStart: 1,\n        loadMore: loadMoreUsers,\n        hasMore: hasMore //@ts-ignore\n        ,\n        loader: false //     <Box\n        //       sx={{\n        //         display: \"flex\",\n        //         margin: \"20px\",\n        //         alignItems: \"center\",\n        //         justifyContent: \"center\",\n        //       }}\n        //       key={`${page * dataByPage}`}\n        //     >\n        //       <CircularProgress />\n        //     </Box>\n        //   }\n        ,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          elevation: 3,\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: /*#__PURE__*/_jsxDEV(UsersData, {\n              users: users\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), isModalOpen ? /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 24\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"nWTtMyfrYk1/hLwJ3Ya4JOBvhaY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macbook/Desktop/darly-solutions/src/App.tsx"],"names":["React","useCallback","useEffect","useState","InfiniteScroll","Container","Paper","TableBody","TableContainer","Modal","UsersData","ModalContext","dataByPage","BASE_URL","client","App","users","setUsers","setError","page","setPage","hasMore","setHasMore","modalContextValue","setModalContextValue","isModalOpen","setIsModalOpen","isCreate","setIsCreate","addUser","user","prevUsers","loadMoreUsers","res","get","prevList","prev","fetch","then","response","ok","Error","statusText","total","Number","headers","catch","e","pb","create","open","setCreate","setItem","setOpen"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Box, CircularProgress, Container, Paper, TableBody, TableContainer } from \"@mui/material\";\n\nimport { Modal } from \"./components/Modal\";\nimport { UsersData } from \"./components/UsersData/UsersData\";\nimport { ModalContext } from \"./modal-context\";\n\nimport { dataByPage } from \"./api/constants/const\";\nimport { BASE_URL, client } from \"./api/fetch\";\n\nimport { User } from \"./types/User\";\nimport \"./index.scss\";\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [, setError] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n\n  const [modalContextValue, setModalContextValue] = useState<User>();\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [isCreate, setIsCreate] = useState<boolean>(false);\n\n  const addUser = useCallback((user: User) => {\n    setUsers((prevUsers) => [user, ...prevUsers]);\n  }, []);\n\n  const loadMoreUsers = async () => {\n    const res = await client.get<User>(`?_page=${page + 1}&_limit=${dataByPage}`);\n\n    await setUsers((prevList) => {\n      return [...prevList, ...res];\n    });\n\n    if (!res) {\n      setError(\"error\");\n    } else {\n      setPage((prev) => prev + 1);\n    }\n\n    //   .then((res) => {\n    //     setUsers((prevList) => [...prevList, ...res]);\n    //   })\n    //   .catch((e) => setError(e))\n    //   .finally(() => setPage((prev) => prev + 1));\n  };\n\n  useEffect(() => {\n    fetch(`${BASE_URL}?_page=${1}&_limit=${dataByPage}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`error with db ${response.statusText}`);\n        }\n\n        const total = Number(response.headers.get(\"X-Total-Count\"));\n\n        setHasMore(total > page * dataByPage);\n      })\n      .catch((e) => setError(e));\n  }, [page]);\n\n  return (\n    <Container maxWidth=\"md\" sx={{ pb: \"20px\" }}>\n      <ModalContext.Provider\n        value={{\n          create: isCreate,\n          open: isModalOpen,\n          setCreate: setIsCreate,\n          setItem: setModalContextValue,\n          setOpen: setIsModalOpen,\n          addUser: addUser,\n        }}\n      >\n        <InfiniteScroll\n          pageStart={1}\n          loadMore={loadMoreUsers}\n                  hasMore={hasMore}\n                  //@ts-ignore\n          loader={false}\n          //     <Box\n          //       sx={{\n          //         display: \"flex\",\n          //         margin: \"20px\",\n          //         alignItems: \"center\",\n          //         justifyContent: \"center\",\n          //       }}\n          //       key={`${page * dataByPage}`}\n          //     >\n          //       <CircularProgress />\n          //     </Box>\n          //   }\n        >\n          <TableContainer component={Paper} elevation={3}>\n            <TableBody>\n              <UsersData users={users} />\n            </TableBody>\n          </TableContainer>\n        </InfiniteScroll>\n        {isModalOpen ? <Modal /> : null}\n      </ModalContext.Provider>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}